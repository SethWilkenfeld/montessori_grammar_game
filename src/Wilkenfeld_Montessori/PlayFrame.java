/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Wilkenfeld_Montessori;

import java.util.*;
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

/**
 *
 * @author Seth Wilkenfeld
 */
public class PlayFrame extends javax.swing.JFrame {
    WelcomeFrame home;

    private String[] words0 = {"The", "black", "bear", "jumped", "up", "and", "growled", "loudly", "at", "me."};
    private String[] key0 = {"article", "adjective", "noun", "verb", "preposition", "conjunction", "verb", "adverb", "preposition", "pronoun"};

    private String[] words1 = {"The", "red", "pickup", "truck", "has", "six", "milk", "cans", "on", "it."};
    private String[] key1 = {"article", "adjective", "adjective", "noun", "verb", "adjective", "adjective", "noun", "preposition", "pronoun"};

    private String[] words2 = {"My", "grumpy", "old", "grandpa", "likes", "to", "shout", "at", "the", "birds."};
    private String[] key2 = {"adjective", "adjective", "adjective", "noun", "verb", "preposition", "verb", "preposition", "article", "noun"};

    String[] sentence;
    String[] answers;
    int targets = 0;
    boolean[] myAnswers = new boolean[10];
    boolean[] canSubmit = new boolean[10];

    private String username = "";
    private String difficultyStr = "beginner";

    /**
     * Creates new form PlayFrame
     */
    public PlayFrame() {
        initComponents();
        getContentPane().setBackground(new Color(240,240,232)); // or Color

        MouseListener listener = (MouseListener) new DragMouseAdapter();

        verbShape.addMouseListener(listener);
        adjectiveShape.addMouseListener(listener);
        nounShape.addMouseListener(listener);
        adverbShape.addMouseListener(listener);
        articleShape.addMouseListener(listener);
        conjunctionShape.addMouseListener(listener);
        interjectionShape.addMouseListener(listener);
        prepositionShape.addMouseListener(listener);
        pronounShape.addMouseListener(listener);

        verbShape.setTransferHandler(new TransferHandler("icon"));
        adjectiveShape.setTransferHandler(new TransferHandler("icon"));
        nounShape.setTransferHandler(new TransferHandler("icon"));
        adverbShape.setTransferHandler(new TransferHandler("icon"));
        articleShape.setTransferHandler(new TransferHandler("icon"));
        conjunctionShape.setTransferHandler(new TransferHandler("icon"));
        interjectionShape.setTransferHandler(new TransferHandler("icon"));
        prepositionShape.setTransferHandler(new TransferHandler("icon"));
        pronounShape.setTransferHandler(new TransferHandler("icon"));

        target0.setFocusable(false);
        target1.setFocusable(false);
        target2.setFocusable(false);
        target3.setFocusable(false);
        target4.setFocusable(false);
        target5.setFocusable(false);
        target6.setFocusable(false);
        target7.setFocusable(false);
        target8.setFocusable(false);
        target9.setFocusable(false);

        target0.setTransferHandler(new TransferHandler("icon"));
        target1.setTransferHandler(new TransferHandler("icon"));
        target2.setTransferHandler(new TransferHandler("icon"));
        target3.setTransferHandler(new TransferHandler("icon"));
        target4.setTransferHandler(new TransferHandler("icon"));
        target5.setTransferHandler(new TransferHandler("icon"));
        target6.setTransferHandler(new TransferHandler("icon"));
        target7.setTransferHandler(new TransferHandler("icon"));
        target8.setTransferHandler(new TransferHandler("icon"));
        target9.setTransferHandler(new TransferHandler("icon"));
 
        Random dice = new Random();
        int roll = dice.nextInt(3);
        sentenceBox.setSelectedIndex(roll);
        setSentence(roll);

        setDifficulty(difficultyStr);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftToolPane = new javax.swing.JPanel();
        adjectiveShape = new javax.swing.JLabel();
        nounShape = new javax.swing.JLabel();
        verbShape = new javax.swing.JLabel();
        adverbShape = new javax.swing.JLabel();
        conjunctionShape = new javax.swing.JLabel();
        nounLabel = new javax.swing.JLabel();
        verbLabel = new javax.swing.JLabel();
        adjectiveLabel = new javax.swing.JLabel();
        adverbLabel = new javax.swing.JLabel();
        conjunctionLabel = new javax.swing.JLabel();
        wordsPane = new javax.swing.JPanel();
        jLabel0 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        target0 = new javax.swing.JButton();
        target1 = new javax.swing.JButton();
        target2 = new javax.swing.JButton();
        target3 = new javax.swing.JButton();
        target4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        target5 = new javax.swing.JButton();
        target6 = new javax.swing.JButton();
        target7 = new javax.swing.JButton();
        target8 = new javax.swing.JButton();
        target9 = new javax.swing.JButton();
        returnHomeButton = new javax.swing.JButton();
        playTitle = new javax.swing.JLabel();
        rightToolPane = new javax.swing.JPanel();
        pronounShape = new javax.swing.JLabel();
        prepositionShape = new javax.swing.JLabel();
        interjectionShape = new javax.swing.JLabel();
        articleShape = new javax.swing.JLabel();
        pronounLabel = new javax.swing.JLabel();
        prepositionLabel = new javax.swing.JLabel();
        interjectionLabel = new javax.swing.JLabel();
        articleLabel = new javax.swing.JLabel();
        difficultyBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        sentenceBox = new javax.swing.JComboBox();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        leftToolPane.setBackground(new java.awt.Color(255, 255, 255));
        leftToolPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        adjectiveShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adjectiveShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/adjectiveThumb.PNG"))); // NOI18N
        adjectiveShape.setToolTipText("Adjective: modifies a noun");

        nounShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/nounThumb.PNG"))); // NOI18N
        nounShape.setToolTipText("Noun: names a person, place, or thing");

        verbShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/verbThumb.PNG"))); // NOI18N
        verbShape.setToolTipText("Varb: identifies action or state of being");

        adverbShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adverbShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/adverbThumb.PNG"))); // NOI18N
        adverbShape.setToolTipText("Adverb: modifies a verb, adjective, or other adverb");

        conjunctionShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/conjunctionThumb.PNG"))); // NOI18N
        conjunctionShape.setToolTipText("Conjunction: joins words, phrases, and clauses");

        nounLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nounLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nounLabel.setLabelFor(nounShape);
        nounLabel.setText("Noun");

        verbLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        verbLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        verbLabel.setLabelFor(verbShape);
        verbLabel.setText("Verb");

        adjectiveLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adjectiveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adjectiveLabel.setLabelFor(adjectiveShape);
        adjectiveLabel.setText("Adjective");

        adverbLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        adverbLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adverbLabel.setText("Adverb");

        conjunctionLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        conjunctionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        conjunctionLabel.setText("Conjunction");

        javax.swing.GroupLayout leftToolPaneLayout = new javax.swing.GroupLayout(leftToolPane);
        leftToolPane.setLayout(leftToolPaneLayout);
        leftToolPaneLayout.setHorizontalGroup(
            leftToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftToolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adverbLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adjectiveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nounLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adverbShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(conjunctionShape, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftToolPaneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(leftToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nounShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adjectiveShape, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(conjunctionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(verbLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(verbShape, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        leftToolPaneLayout.setVerticalGroup(
            leftToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftToolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nounShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nounLabel)
                .addGap(18, 18, 18)
                .addComponent(verbShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verbLabel)
                .addGap(18, 18, 18)
                .addComponent(adjectiveShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(adjectiveLabel)
                .addGap(18, 18, 18)
                .addComponent(adverbShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adverbLabel)
                .addGap(18, 18, 18)
                .addComponent(conjunctionShape, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conjunctionLabel)
                .addContainerGap())
        );

        wordsPane.setBackground(new java.awt.Color(255, 255, 255));
        wordsPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        wordsPane.setMaximumSize(null);
        wordsPane.setPreferredSize(new java.awt.Dimension(720, 440));

        jLabel0.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel0.setText("jLabel0");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("jLabel4");

        target0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target0.setContentAreaFilled(false);
        target0.setName(""); // NOI18N
        target0.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target0PropertyChange(evt);
            }
        });

        target1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target1.setContentAreaFilled(false);
        target1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target1PropertyChange(evt);
            }
        });

        target2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target2.setContentAreaFilled(false);
        target2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target2PropertyChange(evt);
            }
        });

        target3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target3.setContentAreaFilled(false);
        target3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target3PropertyChange(evt);
            }
        });

        target4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target4.setContentAreaFilled(false);
        target4.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target4PropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("jLabel5");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("jLabel6");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("jLabel7");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("jLabel8");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("jLabel9");

        target5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target5.setContentAreaFilled(false);
        target5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target5PropertyChange(evt);
            }
        });

        target6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target6.setContentAreaFilled(false);
        target6.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target6PropertyChange(evt);
            }
        });

        target7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target7.setContentAreaFilled(false);
        target7.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target7PropertyChange(evt);
            }
        });

        target8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target8.setContentAreaFilled(false);
        target8.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target8PropertyChange(evt);
            }
        });

        target9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        target9.setContentAreaFilled(false);
        target9.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                target9PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout wordsPaneLayout = new javax.swing.GroupLayout(wordsPane);
        wordsPane.setLayout(wordsPaneLayout);
        wordsPaneLayout.setHorizontalGroup(
            wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wordsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(wordsPaneLayout.createSequentialGroup()
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel0, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(target0, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(target1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(target2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(target3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(target4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(wordsPaneLayout.createSequentialGroup()
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(target5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(target6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(target7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(target8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(target9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        wordsPaneLayout.setVerticalGroup(
            wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wordsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel0, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(target1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target0, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(wordsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(target8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(target9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        returnHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/WelcomeButtonBase.png"))); // NOI18N
        returnHomeButton.setBorder(null);
        returnHomeButton.setContentAreaFilled(false);
        returnHomeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/WelcomeButtonPressed.png"))); // NOI18N
        returnHomeButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/WelcomeButtonSelected.png"))); // NOI18N
        returnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnHomeButtonActionPerformed(evt);
            }
        });

        playTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        playTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        playTitle.setText("You are playing _ difficulty.");

        rightToolPane.setBackground(new java.awt.Color(255, 255, 255));
        rightToolPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        rightToolPane.setMinimumSize(new java.awt.Dimension(100, 499));
        rightToolPane.setPreferredSize(new java.awt.Dimension(102, 499));

        pronounShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pronounShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/pronounThumb.PNG"))); // NOI18N
        pronounShape.setToolTipText("Pronoun: takes the place of a noun");

        prepositionShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prepositionShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/prepositionThumb.PNG"))); // NOI18N
        prepositionShape.setToolTipText("Preposition: shows a relationship between a noun (or pronoun) and other words in a sentence");

        interjectionShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        interjectionShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/interjectionThumb.PNG"))); // NOI18N
        interjectionShape.setToolTipText("Interjection: expresses emotion");

        articleShape.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        articleShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Shapes/articleThumb.PNG"))); // NOI18N
        articleShape.setToolTipText("Article: a word that is with a noun to indicate the type of reference being made by the noun.");

        pronounLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        pronounLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pronounLabel.setText("Pronoun");

        prepositionLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        prepositionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prepositionLabel.setText("Preposition");

        interjectionLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        interjectionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        interjectionLabel.setText("Interjection");

        articleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        articleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        articleLabel.setText("Article");

        javax.swing.GroupLayout rightToolPaneLayout = new javax.swing.GroupLayout(rightToolPane);
        rightToolPane.setLayout(rightToolPaneLayout);
        rightToolPaneLayout.setHorizontalGroup(
            rightToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightToolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prepositionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pronounLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(articleShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(interjectionShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(prepositionShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pronounShape, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(interjectionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(articleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        rightToolPaneLayout.setVerticalGroup(
            rightToolPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightToolPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(articleShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(articleLabel)
                .addGap(29, 29, 29)
                .addComponent(interjectionShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(interjectionLabel)
                .addGap(34, 34, 34)
                .addComponent(prepositionShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prepositionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(pronounShape)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pronounLabel)
                .addContainerGap())
        );

        difficultyBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        difficultyBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Beginner", "Intermediate", "Advanced" }));
        difficultyBox.setBorder(null);
        difficultyBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                difficultyBoxActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Difficulty:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Sentence:");

        sentenceBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sentenceBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1: Bear", "2: Truck", "3: Grandpa" }));
        sentenceBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sentenceBoxActionPerformed(evt);
            }
        });

        submitButton.setBackground(new java.awt.Color(255, 255, 255));
        submitButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        submitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/SubmitButtonBase.png"))); // NOI18N
        submitButton.setBorder(null);
        submitButton.setContentAreaFilled(false);
        submitButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/SubmitButtonPressed.png"))); // NOI18N
        submitButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Buttons/SubmitButtonSelected.png"))); // NOI18N
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(leftToolPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(playTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(10, 10, 10)
                                .addComponent(returnHomeButton))
                            .addComponent(wordsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rightToolPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(difficultyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitButton)
                        .addGap(155, 155, 155)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sentenceBox, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(playTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(returnHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(wordsPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(leftToolPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rightToolPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sentenceBox)
                    .addComponent(difficultyBox)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setSentence(int i) {
        switch(i) {
            case 0:
                sentence = words0;
                answers = key0;
                break;
            case 1:
                sentence = words1;
                answers = key1;
                break;
            case 2:
                sentence = words2;
                answers = key2;
                break;
        }

        jLabel0.setText(sentence[0]);
        jLabel1.setText(sentence[1]);
        jLabel2.setText(sentence[2]);
        jLabel3.setText(sentence[3]);
        jLabel4.setText(sentence[4]);
        jLabel5.setText(sentence[5]);
        jLabel6.setText(sentence[6]);
        jLabel7.setText(sentence[7]);
        jLabel8.setText(sentence[8]);
        jLabel9.setText(sentence[9]);

        setDifficulty(difficultyStr);
    }

    private void clearIcons() {
        ImageIcon blank = new ImageIcon("");
        target0.setIcon(blank);
        target1.setIcon(blank);
        target2.setIcon(blank);
        target3.setIcon(blank);
        target4.setIcon(blank);
        target5.setIcon(blank);
        target6.setIcon(blank);
        target7.setIcon(blank);
        target8.setIcon(blank);
        target9.setIcon(blank);

        myAnswers = new boolean[10];
        canSubmit = new boolean[10];
    }

    private void setDifficulty(String d) {
        targets = 0;
        difficultyStr = d;
        if(difficultyStr.equals("beginner")) {
            for(int i = 0; i < 10; i++) {
                if(answers[i].equals("noun") || answers[i].equals("verb")) {
                    setTargetVisible(i, true);
                    targets++;
                } else {
                    setTargetVisible(i, false);
                }
            }
            adjectiveShape.setVisible(false);
            adverbShape.setVisible(false);
            articleShape.setVisible(false);
            conjunctionShape.setVisible(false);
            interjectionShape.setVisible(false);
            prepositionShape.setVisible(false);
            pronounShape.setVisible(false);
            adjectiveLabel.setVisible(false);
            adverbLabel.setVisible(false);
            articleLabel.setVisible(false);
            conjunctionLabel.setVisible(false);
            interjectionLabel.setVisible(false);
            prepositionLabel.setVisible(false);
            pronounLabel.setVisible(false);
        } else if(difficultyStr.equals("intermediate")) {
            for(int i = 0; i < 10; i++) {
                if(answers[i].equals("noun") || answers[i].equals("verb") || answers[i].equals("adjective") || answers[i].equals("adverb") || answers[i].equals("conjunction")) {
                    setTargetVisible(i, true);
                    targets++;
                } else {
                    setTargetVisible(i, false);
                }
            }
            adjectiveShape.setVisible(true);
            adverbShape.setVisible(true);
            articleShape.setVisible(false);
            conjunctionShape.setVisible(true);
            interjectionShape.setVisible(false);
            prepositionShape.setVisible(false);
            pronounShape.setVisible(false);
            adjectiveLabel.setVisible(true);
            adverbLabel.setVisible(true);
            articleLabel.setVisible(false);
            conjunctionLabel.setVisible(true);
            interjectionLabel.setVisible(false);
            prepositionLabel.setVisible(false);
            pronounLabel.setVisible(false);
        } else if(difficultyStr.equals("advanced")) {
            for(int i = 0; i < 10; i++) {
                setTargetVisible(i, true);
                targets++;
            }
            adjectiveShape.setVisible(true);
            adverbShape.setVisible(true);
            articleShape.setVisible(true);
            conjunctionShape.setVisible(true);
            interjectionShape.setVisible(true);
            prepositionShape.setVisible(true);
            pronounShape.setVisible(true);
            adjectiveLabel.setVisible(true);
            adverbLabel.setVisible(true);
            articleLabel.setVisible(true);
            conjunctionLabel.setVisible(true);
            interjectionLabel.setVisible(true);
            prepositionLabel.setVisible(true);
            pronounLabel.setVisible(true);
        } else {
            for(int i = 0; i < 10; i++) {
                setTargetVisible(i, false);
            }
        }

        playTitle.setText("You are playing on " + d + " difficulty.");
    }

    private void setTargetVisible(int target, boolean val) {
        switch(target) {
            case 0:
                target0.setVisible(val);
                break;
            case 1:
                target1.setVisible(val);
                break;
            case 2:
                target2.setVisible(val);
                break;
            case 3:
                target3.setVisible(val);
                break;
            case 4:
                target4.setVisible(val);
                break;
            case 5:
                target5.setVisible(val);
                break;
            case 6:
                target6.setVisible(val);
                break;
            case 7:
                target7.setVisible(val);
                break;
            case 8:
                target8.setVisible(val);
                break;
            case 9:
                target9.setVisible(val);
                break;
        }
    }

    private void target0PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target0PropertyChange
        canSubmit[0] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(0, evt.getNewValue().toString());
    }//GEN-LAST:event_target0PropertyChange

    private void target1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target1PropertyChange
        canSubmit[1] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(1, evt.getNewValue().toString());
    }//GEN-LAST:event_target1PropertyChange

    private void target2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target2PropertyChange
        canSubmit[2] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(2, evt.getNewValue().toString());
    }//GEN-LAST:event_target2PropertyChange

    private void target3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target3PropertyChange
        canSubmit[3] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(3, evt.getNewValue().toString());
    }//GEN-LAST:event_target3PropertyChange

    private void target4PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target4PropertyChange
        canSubmit[4] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(4, evt.getNewValue().toString());
    }//GEN-LAST:event_target4PropertyChange

    private void target5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target5PropertyChange
        canSubmit[5] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(5, evt.getNewValue().toString());
    }//GEN-LAST:event_target5PropertyChange

    private void target6PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target6PropertyChange
        canSubmit[6] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(6, evt.getNewValue().toString());
    }//GEN-LAST:event_target6PropertyChange

    private void target7PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target7PropertyChange
        canSubmit[7] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(7, evt.getNewValue().toString());
    }//GEN-LAST:event_target7PropertyChange

    private void target8PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target8PropertyChange
        canSubmit[8] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(8, evt.getNewValue().toString());
    }//GEN-LAST:event_target8PropertyChange

    private void target9PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_target9PropertyChange
        canSubmit[9] = true;
        if(evt.getPropertyName().equals("icon"))
            getAnswer(9, evt.getNewValue().toString());
    }//GEN-LAST:event_target9PropertyChange

    public void setHomeFrame(WelcomeFrame h) {
        home = h;
    }

    private void returnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnHomeButtonActionPerformed
        home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_returnHomeButtonActionPerformed

    private void difficultyBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_difficultyBoxActionPerformed
        String d = (String)difficultyBox.getSelectedItem();
        setDifficulty(d.toLowerCase());
        clearIcons();
    }//GEN-LAST:event_difficultyBoxActionPerformed

    private void sentenceBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sentenceBoxActionPerformed
        setSentence(sentenceBox.getSelectedIndex());
        clearIcons();
    }//GEN-LAST:event_sentenceBoxActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // calculate score
        double correct = 0;
        for(int i = 0; i < 10; i++) {
            if(myAnswers[i])
                correct += 1;
        }

        double score = (correct/targets) * 100;

        // highlight correct frames green
        // highlight incorrect frames red
        // show score
        ResultsFrame rf = new ResultsFrame();
        rf.setScore(score);
        rf.setVisible(true);
    }//GEN-LAST:event_submitButtonActionPerformed

    private void getAnswer(int target, String value) {
        myAnswers[target] = (value.indexOf(answers[target]) != -1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adjectiveLabel;
    private javax.swing.JLabel adjectiveShape;
    private javax.swing.JLabel adverbLabel;
    private javax.swing.JLabel adverbShape;
    private javax.swing.JLabel articleLabel;
    private javax.swing.JLabel articleShape;
    private javax.swing.JLabel conjunctionLabel;
    private javax.swing.JLabel conjunctionShape;
    private javax.swing.JComboBox difficultyBox;
    private javax.swing.JLabel interjectionLabel;
    private javax.swing.JLabel interjectionShape;
    private javax.swing.JLabel jLabel0;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel leftToolPane;
    private javax.swing.JLabel nounLabel;
    private javax.swing.JLabel nounShape;
    private javax.swing.JLabel playTitle;
    private javax.swing.JLabel prepositionLabel;
    private javax.swing.JLabel prepositionShape;
    private javax.swing.JLabel pronounLabel;
    private javax.swing.JLabel pronounShape;
    private javax.swing.JButton returnHomeButton;
    private javax.swing.JPanel rightToolPane;
    private javax.swing.JComboBox sentenceBox;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton target0;
    private javax.swing.JButton target1;
    private javax.swing.JButton target2;
    private javax.swing.JButton target3;
    private javax.swing.JButton target4;
    private javax.swing.JButton target5;
    private javax.swing.JButton target6;
    private javax.swing.JButton target7;
    private javax.swing.JButton target8;
    private javax.swing.JButton target9;
    private javax.swing.JLabel verbLabel;
    private javax.swing.JLabel verbShape;
    private javax.swing.JPanel wordsPane;
    // End of variables declaration//GEN-END:variables

    public void setUsername(String u) {
        username = u;
        playTitle.setText(username + ", is playing " + difficultyStr + " difficulty.");

    }
}

class DragMouseAdapter extends MouseAdapter {
    public void mousePressed(MouseEvent e) {
        JComponent c = (JComponent) e.getSource();
        TransferHandler handler = c.getTransferHandler();
        handler.exportAsDrag(c, e, TransferHandler.COPY);
    }
}